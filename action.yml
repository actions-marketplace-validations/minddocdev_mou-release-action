name: "MOU Release"
description: "Create a Github release with parsed commits into a given Markdown template"
author: "MindDoc Health GmbH"
branding:
  icon: "cloud"
  color: "blue"
inputs:
  app:
    description: "The name of the app involved in the release"
    required: true
  commitDiffBase:
    description: >-
      The sha, branch or tag that will be used as base for git commit comparison.
      Branches should have the `heads/<branch name>` format and tags `tags/<tag name>`.
      The commits will be formatted into a Markdown list and replaced into the `$CHANGES` variable
      for the given `templatePath` template file.
    required: false
  commitScope:
    description: >-
      Render commits that only below to the given scope. Scopes are analyzed for commits that
      follow the Angular commit style.
      e.g. `type(scope): my commit title` or `(scope): my commit title`
    required: false
  draft:
    description: "Publish release draft"
    required: false
    default: "true"
  prerelease:
    description: "Mark release as prerelease when creating"
    required: false
    default: "true"
  releaseName:
    description: "Mark release as prerelease when creating"
    required: true
  releaseTag:
    description: "The git tag that belongs to the release"
    required: true
  taskBaseUrl:
    description: >-
      The base url to append for a detected task (do not set a trailing `/`).
      By default, it will create a url based on your Github organization.
      (e.g. https://myorg.atlassian.net/browse)
    required: false
  taskPrefix:
    description: "The prefix that identifies task ids in the commits"
    required: false
    default: JIRA-
  templatePath:
    description: >-
      The path for the Markdown template that will be used to create the release body,
      relative to `.github/`.
    required: true
  token:
    description: "The token to access Github's API"
    required: true
outputs:
  id:
    description: "The release id given by Github's API"
  changes:
    description: "A JSON array with the list of commit sha that are involved in the release"
  html_url:
    description: "The browser url linking to Github's release"
  tasks:
    description: "A JSON array with the list of project management tasks involved in the release"
  pull_requests:
    description: "A JSON array with the list of Github pull requests involved in the release"
  upload_url:
    description: "The url used for uploading release artifacts"
runs:
  using: "node12"
  main: "dist/run.js"
